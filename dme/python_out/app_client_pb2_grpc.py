# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import app_client_pb2 as app__client__pb2


class MatchEngineApiStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterClient = channel.unary_unary(
                '/distributed_match_engine.MatchEngineApi/RegisterClient',
                request_serializer=app__client__pb2.RegisterClientRequest.SerializeToString,
                response_deserializer=app__client__pb2.RegisterClientReply.FromString,
                )
        self.FindCloudlet = channel.unary_unary(
                '/distributed_match_engine.MatchEngineApi/FindCloudlet',
                request_serializer=app__client__pb2.FindCloudletRequest.SerializeToString,
                response_deserializer=app__client__pb2.FindCloudletReply.FromString,
                )
        self.PlatformFindCloudlet = channel.unary_unary(
                '/distributed_match_engine.MatchEngineApi/PlatformFindCloudlet',
                request_serializer=app__client__pb2.PlatformFindCloudletRequest.SerializeToString,
                response_deserializer=app__client__pb2.FindCloudletReply.FromString,
                )
        self.VerifyLocation = channel.unary_unary(
                '/distributed_match_engine.MatchEngineApi/VerifyLocation',
                request_serializer=app__client__pb2.VerifyLocationRequest.SerializeToString,
                response_deserializer=app__client__pb2.VerifyLocationReply.FromString,
                )
        self.GetLocation = channel.unary_unary(
                '/distributed_match_engine.MatchEngineApi/GetLocation',
                request_serializer=app__client__pb2.GetLocationRequest.SerializeToString,
                response_deserializer=app__client__pb2.GetLocationReply.FromString,
                )
        self.AddUserToGroup = channel.unary_unary(
                '/distributed_match_engine.MatchEngineApi/AddUserToGroup',
                request_serializer=app__client__pb2.DynamicLocGroupRequest.SerializeToString,
                response_deserializer=app__client__pb2.DynamicLocGroupReply.FromString,
                )
        self.GetAppInstList = channel.unary_unary(
                '/distributed_match_engine.MatchEngineApi/GetAppInstList',
                request_serializer=app__client__pb2.AppInstListRequest.SerializeToString,
                response_deserializer=app__client__pb2.AppInstListReply.FromString,
                )
        self.GetFqdnList = channel.unary_unary(
                '/distributed_match_engine.MatchEngineApi/GetFqdnList',
                request_serializer=app__client__pb2.FqdnListRequest.SerializeToString,
                response_deserializer=app__client__pb2.FqdnListReply.FromString,
                )
        self.GetAppOfficialFqdn = channel.unary_unary(
                '/distributed_match_engine.MatchEngineApi/GetAppOfficialFqdn',
                request_serializer=app__client__pb2.AppOfficialFqdnRequest.SerializeToString,
                response_deserializer=app__client__pb2.AppOfficialFqdnReply.FromString,
                )
        self.GetQosPositionKpi = channel.unary_stream(
                '/distributed_match_engine.MatchEngineApi/GetQosPositionKpi',
                request_serializer=app__client__pb2.QosPositionRequest.SerializeToString,
                response_deserializer=app__client__pb2.QosPositionKpiReply.FromString,
                )
        self.SendEdgeEvent = channel.stream_stream(
                '/distributed_match_engine.MatchEngineApi/SendEdgeEvent',
                request_serializer=app__client__pb2.ClientEdgeEvent.SerializeToString,
                response_deserializer=app__client__pb2.ServerEdgeEvent.FromString,
                )


class MatchEngineApiServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RegisterClient(self, request, context):
        """
        RegisterClient

        Registers the client with the closest Distributed Matching Engine (the
        nearest edge location in the Operator network) and validates the
        legitimacy of the mobile subscriber. All session information is encrypted.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindCloudlet(self, request, context):
        """
        FindCloudlet

        Locates the most optimal edge computing footprint and allows the
        registered application to find the application backend by leveraging the
        location, application subscription, and service provider agreement. If
        there are no suitable cloudlet instances available, the client may connect
        to the application server located in the public cloud.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PlatformFindCloudlet(self, request, context):
        """
        PlatformFindCloudlet

        Similar to FindCloudlet, except uses a token for client data.
        This API is only applicable for Platform Applications.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VerifyLocation(self, request, context):
        """
        VerifyLocation

        Verifies that the GPS coordinates accurately report the actual location of the device.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLocation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddUserToGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAppInstList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFqdnList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAppOfficialFqdn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetQosPositionKpi(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendEdgeEvent(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MatchEngineApiServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterClient': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterClient,
                    request_deserializer=app__client__pb2.RegisterClientRequest.FromString,
                    response_serializer=app__client__pb2.RegisterClientReply.SerializeToString,
            ),
            'FindCloudlet': grpc.unary_unary_rpc_method_handler(
                    servicer.FindCloudlet,
                    request_deserializer=app__client__pb2.FindCloudletRequest.FromString,
                    response_serializer=app__client__pb2.FindCloudletReply.SerializeToString,
            ),
            'PlatformFindCloudlet': grpc.unary_unary_rpc_method_handler(
                    servicer.PlatformFindCloudlet,
                    request_deserializer=app__client__pb2.PlatformFindCloudletRequest.FromString,
                    response_serializer=app__client__pb2.FindCloudletReply.SerializeToString,
            ),
            'VerifyLocation': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyLocation,
                    request_deserializer=app__client__pb2.VerifyLocationRequest.FromString,
                    response_serializer=app__client__pb2.VerifyLocationReply.SerializeToString,
            ),
            'GetLocation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLocation,
                    request_deserializer=app__client__pb2.GetLocationRequest.FromString,
                    response_serializer=app__client__pb2.GetLocationReply.SerializeToString,
            ),
            'AddUserToGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.AddUserToGroup,
                    request_deserializer=app__client__pb2.DynamicLocGroupRequest.FromString,
                    response_serializer=app__client__pb2.DynamicLocGroupReply.SerializeToString,
            ),
            'GetAppInstList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAppInstList,
                    request_deserializer=app__client__pb2.AppInstListRequest.FromString,
                    response_serializer=app__client__pb2.AppInstListReply.SerializeToString,
            ),
            'GetFqdnList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFqdnList,
                    request_deserializer=app__client__pb2.FqdnListRequest.FromString,
                    response_serializer=app__client__pb2.FqdnListReply.SerializeToString,
            ),
            'GetAppOfficialFqdn': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAppOfficialFqdn,
                    request_deserializer=app__client__pb2.AppOfficialFqdnRequest.FromString,
                    response_serializer=app__client__pb2.AppOfficialFqdnReply.SerializeToString,
            ),
            'GetQosPositionKpi': grpc.unary_stream_rpc_method_handler(
                    servicer.GetQosPositionKpi,
                    request_deserializer=app__client__pb2.QosPositionRequest.FromString,
                    response_serializer=app__client__pb2.QosPositionKpiReply.SerializeToString,
            ),
            'SendEdgeEvent': grpc.stream_stream_rpc_method_handler(
                    servicer.SendEdgeEvent,
                    request_deserializer=app__client__pb2.ClientEdgeEvent.FromString,
                    response_serializer=app__client__pb2.ServerEdgeEvent.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'distributed_match_engine.MatchEngineApi', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MatchEngineApi(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RegisterClient(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/distributed_match_engine.MatchEngineApi/RegisterClient',
            app__client__pb2.RegisterClientRequest.SerializeToString,
            app__client__pb2.RegisterClientReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindCloudlet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/distributed_match_engine.MatchEngineApi/FindCloudlet',
            app__client__pb2.FindCloudletRequest.SerializeToString,
            app__client__pb2.FindCloudletReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PlatformFindCloudlet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/distributed_match_engine.MatchEngineApi/PlatformFindCloudlet',
            app__client__pb2.PlatformFindCloudletRequest.SerializeToString,
            app__client__pb2.FindCloudletReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VerifyLocation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/distributed_match_engine.MatchEngineApi/VerifyLocation',
            app__client__pb2.VerifyLocationRequest.SerializeToString,
            app__client__pb2.VerifyLocationReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLocation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/distributed_match_engine.MatchEngineApi/GetLocation',
            app__client__pb2.GetLocationRequest.SerializeToString,
            app__client__pb2.GetLocationReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddUserToGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/distributed_match_engine.MatchEngineApi/AddUserToGroup',
            app__client__pb2.DynamicLocGroupRequest.SerializeToString,
            app__client__pb2.DynamicLocGroupReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAppInstList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/distributed_match_engine.MatchEngineApi/GetAppInstList',
            app__client__pb2.AppInstListRequest.SerializeToString,
            app__client__pb2.AppInstListReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFqdnList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/distributed_match_engine.MatchEngineApi/GetFqdnList',
            app__client__pb2.FqdnListRequest.SerializeToString,
            app__client__pb2.FqdnListReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAppOfficialFqdn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/distributed_match_engine.MatchEngineApi/GetAppOfficialFqdn',
            app__client__pb2.AppOfficialFqdnRequest.SerializeToString,
            app__client__pb2.AppOfficialFqdnReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetQosPositionKpi(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/distributed_match_engine.MatchEngineApi/GetQosPositionKpi',
            app__client__pb2.QosPositionRequest.SerializeToString,
            app__client__pb2.QosPositionKpiReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendEdgeEvent(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/distributed_match_engine.MatchEngineApi/SendEdgeEvent',
            app__client__pb2.ClientEdgeEvent.SerializeToString,
            app__client__pb2.ServerEdgeEvent.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
