/**
 * Copyright 2019 MobiledgeX, Inc. All rights and licenses reserved.
 * MobiledgeX, Inc. 156 2nd Street #408, San Francisco, CA 94105
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// App common

syntax = "proto3";
package distributed_match_engine;

// LProto indicates which protocol to use for accessing an application on a particular port. This is required by Kubernetes for port mapping.
enum LProto {
  // Unknown protocol
  L_PROTO_UNKNOWN = 0;
  // TCP (L4) protocol
  L_PROTO_TCP = 1;
  // UDP (L4) protocol
  L_PROTO_UDP = 2;
  // HTTP (L7 tcp) protocol
  L_PROTO_HTTP = 3;
}

// AppPort describes an L4 or L7 public access port/path mapping. This is used to track external to internal mappings for access via a shared load balancer or reverse proxy.
message AppPort {
  // TCP (L4), UDP (L4), or HTTP (L7) protocol
  LProto proto = 1;
  // Container port
  int32 internal_port = 2;
  // Public facing port for TCP/UDP (may be mapped on shared LB reverse proxy)
  int32 public_port = 3;
  // Public facing path for HTTP L7 access.
  string path_prefix = 4;
  // FQDN prefix to append to base FQDN in FindCloudlet response. May be empty.
  string fqdn_prefix = 5;
  // A non-zero end port indicates this is a port range from internal port to end port, inclusive.
  int32 end_port = 6;
}
